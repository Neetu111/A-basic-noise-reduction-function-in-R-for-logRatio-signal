library(grid)
library(lattice)
library(IDPmisc)
library(pracma)
library(ggplot2)
data <- read.table("SCONES_test.tsv", sep = '\t', header = TRUE)      # Reading the data
unique(is.infinite(data$testSample1))      # check for inf values in data
unique(is.infinite(data$testSample2))      # check for inf values in data
data <- NaRV.omit(data)               # Remove inf values from data
data$chr <- as.factor(data$chr)       # changing chr to factor
str(data)                       # summary of data
attach(data)                    # attach the data to console
# Data Analysis 
chr1.data <- subset(data, data$chr == 1)
chr2.data <- subset(data, data$chr == 2)
# Plot the data for different level
par(mfrow=c(2,2))
ggplot(data = data, aes(x= 1:15486, y = testSample1, color = factor(chr))) + geom_point() + scale_color_discrete(labels = c("1", "2")) + labs(color = "chr value", y = "Test Sample 1 Values")
ggplot(data = data, aes(x= 1:15486, y = testSample2, color = factor(chr))) + geom_point() + scale_color_discrete(labels = c("1", "2")) + labs(color = "chr value", y = "Test Sample 2 Values")
# Box Plot
par(mfrow=c(1,2))
boxplot(testSample1, main="Test Sample 1")# Test Sample 1
boxplot(testSample2, main="Test Sample 2")# Test Sample 2
logratio.data <- cbind.data.frame(chr, logratio=log(abs(testSample1/testSample2), base = 2))         # logRatio signal
var(logratio.data$logratio)
logratio.filter <- movavg(logratio.data$logratio, 10, type="m")# Filter to reduce noise
logratio.filter.data <- cbind.data.frame(chr, logratio.filter)
var(logratio.filter.data$logratio.filter)
ggplot(data = logratio.data, aes(x= 1:15486, y = logratio, color = factor(chr))) + geom_point() + scale_color_discrete(labels = c("1", "2")) + labs(color = "chr value", y = "LogRatio Signal")
ggplot(data = logratio.filter.data, aes(x= 1:15486, y = logratio.filter, color = factor(chr))) + geom_point() + scale_color_discrete(labels = c("1", "2")) + labs(color = "chr value", y = "Filtered LogRatio Signal")
q()
